{"name":"ϐrown","tagline":"hyperfast and minimalistic json2html template engine for nodejs / coffeescript, a mashup between emmet/mustache/json-dsl/smarty","body":"<h1>ϐrown</h1>\r\n\r\nJade-ish + Mustache-ish template engine on steroids in 846 gzipped kilobytes\r\n\r\n# Usage \r\n\r\n    $ npm install brown\r\n\r\nor in the browser:\r\n \r\n    <script type='text/javascript' src='brown.min.js'></script>\r\n\r\n## Simple\r\n\r\n    brown.render( \"hello {{foo}}\", { foo: \"world\" } );\r\n\r\noutputs:\r\n\r\n    hello world\r\n\r\n## Functions \r\n\r\nCreate a fullfledged template engine by adding functions:\r\n\r\n    brown.micromustache.encode = function(key,type) {\r\n      var html = this[key] || '';\r\n      return  type == \"html\" ?\r\n              String(html).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;') :\r\n              html\r\n    };\r\n\r\n    json = {\r\n      div:\r\n        'a href=\"{{href}}\" onclick=\"{{encode:label:html}}\"': \"{{label}}\"\r\n    };\r\n\r\n    brown.render( json, {href=\"/\", label:\"my \\\"label\\\"\"} )\r\n\r\noutputs:\r\n\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/\" onclick=\"my &quot;label&quot;\">my \"label\"</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n> Need more? See [if/foreach/filter/etc examples here](https://gist.github.com/coderofsalvation/93610d527c7b8534567f) on how to extend brown with [micromustache](https://www.npmjs.com/package/micromustache) functions.\r\n\r\n## Generate JADE-ish xml/html from JADE-ish json\r\n\r\nϐrown can be monkeypatched, to automatically produce xml-trees from json (like JADE):\r\n\r\n    var json = {\r\n      ul: {\r\n        li: {\r\n          'a href=\"{{foo}}\": \"Click me\"\r\n        }\r\n      }\r\n    }\r\n    brown.render json,{ foo: \"/\" }\r\n\r\noutputs:\r\n\r\n    <ul>\r\n      <li>\r\n        <a href=\"/\">Click me </a>\r\n      </li>\r\n    </ul>\r\n\r\nHow? \r\nSimple, by just monkeypatching ϐrown with [json-dsl](https://npmjs.org/package/json-dsl). See [coffeescript](test/jadeish.coffee) / [JS](test/jadeish.js) examples.\r\n\r\n## Commandline util\r\n\r\nUse as a commandline generator (install using `npm install -g` ) :\r\n\r\n      $ brown\r\n        Usage: brown <string|file> [jsonstring|jsonfile]\r\n\r\n      examples:\r\n              $ brown 'foo {{foo}}' '{\"foo\":\"world\"}'\r\n              $ brown foo.html data.json\r\n\r\n# Goals / Philosophy\r\n\r\n* lightweight and extendable \r\n* mustache without the noise (using [micromustache](https://www.npmjs.com/package/micromustache))\r\n\r\nWith these basics you can literally do anything. \r\n> Need more? See [more examples here](https://gist.github.com/coderofsalvation/93610d527c7b8534567f) on how to extend brown with [micromustache](https://www.npmjs.com/package/micromustache) functions.\r\n\r\n# Roadmap\r\n\r\n* stability and peace\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}